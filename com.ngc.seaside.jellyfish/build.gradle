apply plugin: 'application'

mainClassName = "com.ngc.seaside.jellyfish.JellyFish"

dependencies {

    compile project(":jellyfish.impl.provider")

    compile "com.ngc.blocs:service.api:$blocsVersion"
    compile "com.google.guava:guava:$guavaVersion"
    compile "org.osgi:osgi.core:$osgiVersion"
    compile "com.ngc.blocs:component.impl.common.componentutilities:$blocsVersion"
    compile "com.ngc.blocs:service.log.impl.common.logservice:$blocsVersion"
    compile "com.ngc.blocs:service.resource.impl.common.resourceservice:$blocsVersion"
    compile "org.osgi:osgi.enterprise:$osgiVersion"
    compile "com.google.inject:guice:$guiceVersion"
    compile "com.google.inject.extensions:guice-multibindings:$guiceVersion"
    compile "commons-io:commons-io:$commonsIOVersion"
    compile "commons-lang:commons-lang:$commonsLangVersion"
    compile "com.ngc.seaside:systemdescriptor.service.impl.xtext:$jellyfishEXTVersion"
    
    testCompile "com.ngc.blocs:test.impl.common.testutilities:$blocsVersion"
	testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
}

applicationDistribution.from(project(':jellyfish.cli.command.createjellyfishcommand').file('src/main/resources/templates')) { 
	into 'resources/templates'
}

applicationDistribution.from('src/main/resources') { 
	into 'resources'
}

// Provide the app home directory has a system property.
applicationDefaultJvmArgs = ["-DappHome=APP_HOME_PLACEHOLDER", "-DNG_FW_HOME=APP_HOME_PLACEHOLDER"]

// Set the property to the value in the script (windows vs *nix).
startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('APP_HOME_PLACEHOLDER', '\$APP_HOME')
        windowsScript.text = windowsScript.text.replace('APP_HOME_PLACEHOLDER', '%APP_HOME%')
    }
}
