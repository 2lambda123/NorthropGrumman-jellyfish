//
// UNCLASSIFIED
//
// Copyright 2020 Northrop Grumman Systems Corporation
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

module com.ngc.seaside.systemdescriptor.GenerateSystemDescriptor

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "com.ngc.seaside.systemdescriptor"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				mavenLayout = true
				eclipsePlugin = {
					enabled = true
				}
				
				eclipsePluginTest = {
					enabled = true
				}
				
				createEclipseMetaData = true
			}
			
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "com.ngc.seaside.systemdescriptor.SystemDescriptor"
			fileExtensions = "sd"

			serializer = {
				generateStub = false
			}
			
			validator = {
				//composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// We have a custom validator, so do not generate the default.
				generateXtendStub = false
			}
			
			scopeProvider = scoping.ImportNamespacesScopingFragment2 {
				// Don't generate the scope provider because we have a custom one.
				generateXtendStub = false
			}
			
			quickFixProvider = {
				generateXtendStub = false
			}
			
			generator = {
				generateStub = false
			}
			
			formatter = {
				// Generate a default formatter for the system descriptor files
				generateStub = true
				generateXtendStub = false
			}
			
			contentAssist = {
				generateStub = true
				generateXtendStub = false
			}
		}
	}
}
