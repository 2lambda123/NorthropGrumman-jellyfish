/*
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package com.ngc.seaside.threateval.deployment

import com.ngc.seaside.threateval.ThreatEvaluation
import com.ngc.seaside.systemdescriptor.administration.RestAdministration
import com.ngc.seaside.systemdescriptor.deployment.zeromq.ZeroMqTcpTransportConfiguration
import com.ngc.seaside.systemdescriptor.deployment.rest.RestConfiguration
import com.ngc.seaside.systemdescriptor.deployment.rest.HttpMethod
import com.ngc.seaside.systemdescriptor.deployment.zeromq.ConnectionType
import com.ngc.seaside.systemdescriptor.telemetry.RestTelemetry
import com.ngc.seaside.systemdescriptor.telemetry.RestTelemetryReporting

model ZeroMqDemoThreatEvalDeployment refines ThreatEvaluation {
	metadata {
			"description" : "This deployment model allows the ThreatEvaluation system to be deployed on a single machine or VM using ZeroMQ.",
			"stereotypes": ["system", "deployment"]
	}
	
	parts {
		refine defendedAreaTrackPriorityService {
			properties {
				RestTelemetry telemetry
				RestTelemetryReporting telemetryReporting
				RestAdministration admin

				telemetry.config.serverAddress.address = "localhost"
				telemetry.config.serverInterface.name = "0.0.0.0"
				telemetry.config.port = 52416
				telemetry.config.httpMethod = HttpMethod.GET
				telemetry.config.contentType = "application/json"
				telemetry.config.path = "/telemetry"

				telemetryReporting.config.serverAddress.address = "localhost"
				telemetryReporting.config.serverInterface.name = "0.0.0.0"
				telemetryReporting.config.port = 9200
				telemetryReporting.config.httpMethod = HttpMethod.POST
				telemetryReporting.config.contentType = "application/json"
				telemetryReporting.config.path = "/threateval-telemetry/_doc"
				telemetryReporting.rateInMilliseconds = 1000

				admin.shutdown.serverAddress.address = "localhost"
				admin.shutdown.serverInterface.name = "0.0.0.0"
				admin.shutdown.port = 52416
				admin.shutdown.httpMethod = HttpMethod.GET
				admin.shutdown.contentType = "application/json"
				admin.shutdown.path = "/admin/shutdown"
				admin.restart.serverAddress.address = "localhost"
				admin.restart.serverInterface.name = "0.0.0.0"
				admin.restart.port = 52416
				admin.restart.httpMethod = HttpMethod.GET
				admin.restart.contentType = "application/json"
				admin.restart.path = "/admin/restart"
			}
		}
		
		refine classificationTrackPriorityService {
			properties {
				RestTelemetry telemetry
				RestTelemetryReporting telemetryReporting
				RestAdministration admin

				telemetry.config.serverAddress.address = "localhost"
				telemetry.config.serverInterface.name = "0.0.0.0"
				telemetry.config.port = 52413
				telemetry.config.httpMethod = HttpMethod.GET
				telemetry.config.contentType = "application/json"
				telemetry.config.path = "/telemetry"

				telemetryReporting.config.serverAddress.address = "localhost"
				telemetryReporting.config.serverInterface.name = "0.0.0.0"
				telemetryReporting.config.port = 9200
				telemetryReporting.config.httpMethod = HttpMethod.POST
				telemetryReporting.config.contentType = "application/json"
				telemetryReporting.config.path = "/threateval-telemetry/_doc"
				telemetryReporting.rateInMilliseconds = 1000

				admin.shutdown.serverAddress.address = "localhost"
				admin.shutdown.serverInterface.name = "0.0.0.0"
				admin.shutdown.port = 52413
				admin.shutdown.httpMethod = HttpMethod.GET
				admin.shutdown.contentType = "application/json"
				admin.shutdown.path = "/admin/shutdown"
				admin.restart.serverAddress.address = "localhost"
				admin.restart.serverInterface.name = "0.0.0.0"
				admin.restart.port = 52413
				admin.restart.httpMethod = HttpMethod.GET
				admin.restart.contentType = "application/json"
				admin.restart.path = "/admin/restart"
			}
		}
		
		refine engagementTrackPriorityService {
			properties {
				RestTelemetry telemetry
				RestTelemetryReporting telemetryReporting
				RestAdministration admin

				telemetry.config.serverAddress.address = "localhost"
				telemetry.config.serverInterface.name = "0.0.0.0"
				telemetry.config.port = 52414
				telemetry.config.httpMethod = HttpMethod.GET
				telemetry.config.contentType = "application/json"
				telemetry.config.path = "/telemetry"

				telemetryReporting.config.serverAddress.address = "localhost"
				telemetryReporting.config.serverInterface.name = "0.0.0.0"
				telemetryReporting.config.port = 9200
				telemetryReporting.config.httpMethod = HttpMethod.POST
				telemetryReporting.config.contentType = "application/json"
				telemetryReporting.config.path = "/threateval-telemetry/_doc"
				telemetryReporting.rateInMilliseconds = 1000

				admin.shutdown.serverAddress.address = "localhost"
				admin.shutdown.serverInterface.name = "0.0.0.0"
				admin.shutdown.port = 52414
				admin.shutdown.httpMethod = HttpMethod.GET
				admin.shutdown.contentType = "application/json"
				admin.shutdown.path = "/admin/shutdown"
				admin.restart.serverAddress.address = "localhost"
				admin.restart.serverInterface.name = "0.0.0.0"
				admin.restart.port = 52414
				admin.restart.httpMethod = HttpMethod.GET
				admin.restart.contentType = "application/json"
				admin.restart.path = "/admin/restart"
			}
		}
		
		refine trackPriorityService {
			properties {
				RestTelemetry telemetry
				RestTelemetryReporting telemetryReporting
				RestAdministration admin
				
				telemetry.config.serverAddress.address = "localhost"
				telemetry.config.serverInterface.name = "0.0.0.0"
				telemetry.config.port = 52415
				telemetry.config.httpMethod = HttpMethod.GET
				telemetry.config.contentType = "application/json"
				telemetry.config.path = "/telemetry"

				telemetryReporting.config.serverAddress.address = "localhost"
				telemetryReporting.config.serverInterface.name = "0.0.0.0"
				telemetryReporting.config.port = 9200
				telemetryReporting.config.httpMethod = HttpMethod.POST
				telemetryReporting.config.contentType = "application/json"
				telemetryReporting.config.path = "/threateval-telemetry/_doc"
				telemetryReporting.rateInMilliseconds = 1000

				admin.shutdown.serverAddress.address = "localhost"
				admin.shutdown.serverInterface.name = "0.0.0.0"
				admin.shutdown.port = 52415
				admin.shutdown.httpMethod = HttpMethod.GET
				admin.shutdown.contentType = "application/json"
				admin.shutdown.path = "/admin/shutdown"
				admin.restart.serverAddress.address = "localhost"
				admin.restart.serverInterface.name = "0.0.0.0"
				admin.restart.port = 52415
				admin.restart.httpMethod = HttpMethod.GET
				admin.restart.contentType = "application/json"
				admin.restart.path = "/admin/restart"
			}
		}
	}
	
	links {
		refine link systemTrack -> defendedAreaTrackPriorityService.systemTrack {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61104
			}
		}

		refine link impactAssessment -> defendedAreaTrackPriorityService.impactAssessment {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61110
			}
		}

		refine link systemTrackClassification -> classificationTrackPriorityService.systemTrackClassification {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61103
			}
		}

		refine link trackEngagementStatus -> engagementTrackPriorityService.trackEngagementStatus {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61105
			}
		}

		refine link trackPriorityService.prioritizedSystemTracks -> prioritizedSystemTracks {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61106
			}
		}

		refine link defendedAreaTrackPriorityService.trackPriority -> trackPriorityService.trackPriority {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61101
			}
		}

		refine link classificationTrackPriorityService.trackPriority -> trackPriorityService.trackPriority {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61101
			}
		}

		refine link engagementTrackPriorityService.trackPriority -> trackPriorityService.trackPriority {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61101
			}
		}

		refine link droppedSystemTrack -> trackPriorityService.droppedSystemTrack {
			properties {
				ZeroMqTcpTransportConfiguration zeroMqConfiguration

				zeroMqConfiguration.connectionType = ConnectionType.SOURCE_CONNECTS_TARGET_BINDS
				zeroMqConfiguration.bindConfiguration.interface.name = "*"
				zeroMqConfiguration.connectConfiguration.remoteAddress.address = "localhost"
				zeroMqConfiguration.port = 61102
			}
		}

		refine link trackPriorityRequest -> trackPriorityService.trackPriorityRequest {
			properties {
				RestConfiguration restConfiguration

				restConfiguration.serverAddress.address = "localhost"
				restConfiguration.serverInterface.name = "0.0.0.0"
				restConfiguration.port = 52412
				restConfiguration.httpMethod = HttpMethod.POST
				restConfiguration.contentType = "application/x-protobuf"
				restConfiguration.path = "/trackPriorityRequest"
			}
		}
	}

}
