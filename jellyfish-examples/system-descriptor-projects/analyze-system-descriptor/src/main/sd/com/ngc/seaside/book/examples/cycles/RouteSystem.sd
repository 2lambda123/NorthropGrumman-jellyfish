/*
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package com.ngc.seaside.book.examples.cycles

import com.ngc.seaside.book.examples.cycles.ActiveRoute
import com.ngc.seaside.book.examples.cycles.TrafficAccident
import com.ngc.seaside.book.examples.cycles.TrafficReport
import com.ngc.seaside.book.examples.cycles.WeatherAlert
import com.ngc.seaside.book.examples.cycles.TrafficService
import com.ngc.seaside.book.examples.cycles.AccidentService
import com.ngc.seaside.book.examples.cycles.WeatherService
import com.ngc.seaside.book.examples.cycles.RouteService
import com.ngc.seaside.book.examples.cycles.LocalWeatherReport

model RouteSystem {
	input {
		TrafficReport traffic
		TrafficAccident accident
		WeatherAlert weatherAlert
	}

	output {
		ActiveRoute activeRoute
		LocalWeatherReport localWeather
	}

	parts {
		TrafficService trafficService
		AccidentService accidentService
		WeatherService weatherService
		RouteService routeService
	}

	links {
		link traffic -> trafficService.trafficReport
		link accident -> accidentService.trafficAccident
		link weatherAlert -> weatherService.weatherAlert
		link weatherService.localWeatherReport -> localWeather
		
		link routeService.activeRoute -> activeRoute
		link trafficService.localTrafficReport -> routeService.localTraffic
		link accidentService.localAccidentReport -> routeService.localAccident
		link weatherService.localWeatherReport -> routeService.localWeather
		
		link routeService.activeRoute -> weatherService.activeRoute
	}

	scenario computeActiveRoute1 {
		when receiving traffic
		then willPublish activeRoute
	}

	scenario computeActiveRoute2 {
		when receiving accident
		then willPublish activeRoute
	}

	scenario computeActiveRoute3 {
		when receiving weatherAlert
		then willPublish activeRoute
	     and willPublish localWeather
	}
}
