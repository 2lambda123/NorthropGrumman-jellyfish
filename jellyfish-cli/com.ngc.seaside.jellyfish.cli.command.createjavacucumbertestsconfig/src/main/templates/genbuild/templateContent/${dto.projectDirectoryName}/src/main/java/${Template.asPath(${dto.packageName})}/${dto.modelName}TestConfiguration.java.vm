package ${dto.packageName};

import com.google.inject.Inject;

import com.ngc.seaside.service.transport.api.ITransportProvider;
import com.ngc.seaside.service.transport.api.ITransportService;
import com.ngc.seaside.service.transport.api.TransportConfiguration;
#foreach ($transportProvider in $dto.transportProviders)
import ${transportProvider.topicPackage}.${transportProvider.topicType};
#end

public class ${dto.modelName}TestConfiguration {

   private ITransportService transportService;

#foreach ($transportProvider in $dto.transportProviders)
   private ITransportProvider<${transportProvider.topicType}> ${transportProvider.providerName};

#end
   @Inject
   public ${dto.modelName}TestConfiguration(ITransportService transportService#foreach ($transportProvider in $dto.transportProviders),
         ITransportProvider<${transportProvider.topicType}> ${transportProvider.providerName}#end) {
      this.transportService = transportService;
#foreach ($transportProvider in $dto.transportProviders)
      this.${transportProvider.providerName} = ${transportProvider.providerName};
#end
      activate();
   }

   private void activate() {
      TransportConfiguration config = new TransportConfiguration();
#foreach ($transportProvider in $dto.transportProviders)
      ${transportProvider.configurationType}.configure(config, ${transportProvider.providerName});
#end
      transportService.registerConfiguration(config);
   }
}
