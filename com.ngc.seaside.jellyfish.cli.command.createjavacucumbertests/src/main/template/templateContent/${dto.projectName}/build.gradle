#set( $D = '$' )

apply plugin: 'com.ngc.seaside.application'

dependencies {
#foreach ($dependency in $dto.dependencies)
    compile project(":${dependency}")
#end

    compile "com.ngc.seaside:service.api:${D}starfishCoreVersion"
    compile "com.ngc.blocs:test.impl.common.testutilities:${D}blocsCoreVersion"
    compile "com.ngc.blocs:service.thread.impl.common.threadservice:${D}blocsCoreVersion"

    compile "com.ngc.seaside:service.transport.api:${D}transportServiceVersion"
    compile "com.ngc.seaside:service.transport.impl.defaulttransportservice:${D}transportServiceVersion"
    compile "com.ngc.seaside:service.transport.impl.testutils:${D}transportServiceVersion"
    compile "com.ngc.seaside:service.transport.impl.topic.multicast:${D}multicastTransportVersion"
    compile "com.ngc.seaside:service.transport.impl.provider.multicast:${D}multicastTransportVersion"

    compile "com.ngc.seaside:guice.modules:${D}seasideBootstrapVersion"
    compile "com.ngc.seaside:service.transport.impl.defaulttransportservice.module:${D}transportServiceVersion"
    compile "com.ngc.seaside:service.transport.impl.provider.multicast.module:${D}multicastTransportVersion"

    compile "com.google.inject:guice:${D}guiceVersion"
    compile "com.google.guava:guava:${D}guavaVersion"
    compile "info.cukes:cucumber-java:${D}cucumberVersion"
    compile "info.cukes:cucumber-guice:${D}cucumberVersion"
}

ext {
    systemDescriptorFeatureDirectory = file("${D}{buildDir}/features")
    mainClass = '${dto.packageName}.main.${dto.className}TestMain'
}

jar {
    manifest {
        attributes 'Main-Class': mainClass
    }
}

task('copyFeatures', type: Copy) {
    parent.configurations.gherkin.resolvedConfiguration.resolvedArtifacts.each {
	    from zipTree(it.file)
	}
	exclude {
	   it.path.toLowerCase().endsWith('.feature') && !it.path.matches("${D}{parent.systemDescriptorModel.replace('.', '/')}\\b.*?\\.(?i)feature")
	}
	into systemDescriptorFeatureDirectory
    build.dependsOn it
	assemble.dependsOn it
	sourceSets.main.resources.includes systemDescriptorFeatureDirectory
}

seasideApplication {
    mainClassName = mainClass
    includeDistributionDirs = ['src/main/resources/', systemDescriptorFeatureDirectory]
    appHomeVarName = 'appHome'
    appSystemProperties = [NG_FW_HOME: 'APP_HOME_VAR']
    distributionName = "${D}{project.name}-${D}{project.version}"
    installationDir = "build/distributions/${D}{project.name}-${D}{project.version}"

    windows {
        appHomeCmd = "%~dp0.."
    }
    unix {
        appHomeCmd = "pwd -P"
    }
}
