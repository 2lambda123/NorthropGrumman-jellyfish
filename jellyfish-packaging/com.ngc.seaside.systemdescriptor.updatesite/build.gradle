/*
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
apply plugin: 'com.ngc.seaside.repository'
apply plugin: 'com.ngc.seaside.ci'
apply plugin: 'com.ngc.seaside.eclipse.updatesite'
apply plugin: 'com.ngc.seaside.eclipse.p2'

eclipseDistribution {
   linuxVersion = 'eclipse-dsl-photon-R-linux-gtk-x86_64'
   windowsVersion = 'eclipse-dsl-photon-R-win32-x86_64'
   linuxDownloadUrl = "https://mirror.umd.edu/eclipse/technology/epp/downloads/release/photon/R/eclipse-dsl-photon-R-linux-gtk-x86_64.tar.gz"
   windowsDownloadUrl = "https://ftp.osuosl.org/pub/eclipse/technology/epp/downloads/release/photon/R/eclipse-dsl-photon-R-win32-x86_64.zip"
}

def licenseText = project.resources.text.fromFile(licenseFile).asString()
licenseText = new groovy.text.SimpleTemplateEngine()
      .createTemplate(licenseText)
      .make(license.ext.properties)
      .toString()

eclipseUpdateSite {
   
   def sdFeature = feature {
      id = 'com.ngc.seaside.systemdescriptor.feature'
      label = 'JellyFish SystemDescriptor DSL'
      version = project.version
      providerName = 'Northrop Grumman Corporation'
      description {
         url = 'http://www.systemdescriptor.seaside.ngc.com/description'
         text = 'This is the JellyFish System Descriptor Domain Specific Language Eclipse plugin.'
      }
      copyright {
         url = 'http://www.systemdescriptor.seaside.ngc.com/copyright'
         text = licenseText
      }
      license {
         url = 'http://www.systemdescriptor.seaside.ngc.com/license'
         text = licenseText
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor'
         version = "${project.version}"
         unpack = false
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.ui'
         version = "${project.version}"
         unpack = false
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.ide'
         version = "${project.version}"
         unpack = false
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.service.impl.xtext'
         version = "${project.version}"
         unpack = false
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.service.impl.cucumbergherkinservice'
         version = "${project.version}"
         unpack = false
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.service.impl.m2repositoryservice'
         version = "${project.version}"
         unpack = false
      }
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.scenario.impl.standardsteps'
         version = "${project.version}"
         unpack = false
      }
      // This plugin includes 3rd party items used by com.ngc.seaside which are not packaged as OSGi bundles.
      // This "uber" JAR embeds all those non-OSGi dependencies and exports the appropriate packages.
      plugin {
         id = 'com.ngc.seaside.systemdescriptor.thirdparty'
         version = "${project.version}"
         unpack = false
      }
      // These are 3rd party items that are OSGi bundles and need to be included when installing the bundles above.
      // These come from the M2RepositoryService.
      plugin {
         id = 'org.eclipse.aether.api'
         version = "$aetherVersion"
         unpack = false
      }
      plugin {
         id = 'org.eclipse.aether.spi'
         version = "$aetherVersion"
         unpack = false
      }
      plugin {
         id = 'org.eclipse.aether.util'
         version = "$aetherVersion"
         unpack = false
      }
      plugin {
         id = 'org.eclipse.aether.connector.basic'
         version = "$aetherVersion"
         unpack = false
      }
   }

   def sdCategory = category {
      name = 'system_descriptor_category_id'
      label = 'System Descriptor Plugin'
      description = 'Eclipse Plugin for the Seaside System Descriptor'
      feature sdFeature
   }
   
   def externalUpdateSites = [
      //'https://cucumber.io/cucumber-eclipse/update-site',                 // Cucumber - really slow
      //'https://nodeclipse.github.io/updates/markdown',                    // Markdown editor
      // 'https://raw.github.com/satyagraha/gfm_viewer/master/p2-composite' // Markdown git viewer - really slow
   ]

   externalUpdateSites.each {
      p2.remoteRepository(it) {
         // Include all the external site plugins
         plugins { p ->
            dependencies {
               plugin p.dependency
            }
         }
         // Include all the external site features
         features { externalFeature ->
            eclipseUpdateSite.feature externalFeature
            sdCategory.feature externalFeature
         }
      }
   }

   // Blacklist these components due to security issues.
   blacklist 'com.google.guava:guava:19.0'
   blacklist 'com.google.guava:guava:20.0'
   blacklist 'com.google.guava:guava:21.0'
}

dependencies {
   plugin "com.ngc.seaside:systemdescriptor:$version"
   plugin "com.ngc.seaside:systemdescriptor.ide:$version"
   plugin "com.ngc.seaside:systemdescriptor.ui:$version"
   plugin "com.ngc.seaside:systemdescriptor.service.impl.xtext:$version"
   plugin "com.ngc.seaside:systemdescriptor.service.impl.m2repositoryservice:$version"
   plugin "com.ngc.seaside:systemdescriptor.scenario.impl.standardsteps:$version"

   // Our stuff needs Guice.
   plugin "com.google.inject:guice:$guiceVersion"
   // These are transitive dependencies needed by Guice.  Guice does not list these items as direct dependencies.
   // However, Guice actually tries to import packages in these JARs.  Unfortunately, the official version of these
   // JARs do not contain a correct OSGi manifest, so we have to include the versions provided by Apache which have a
   // correct manifest.
   plugin 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.javax-inject:1_2'
   plugin 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.aopalliance:1.0_6'

   // Non OSGi dependencies packaged as an uber JAR.
   plugin project(':systemdescriptor.thirdparty')
}

createZip.from { licenseFile }
