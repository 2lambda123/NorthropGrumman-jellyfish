apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'java-gradle-plugin'

configurations {
    commandTemplate
}

dependencies {
    implementation project(':jellyfish')
    implementation project(':jellyfish.sonarqube.plugin')
    implementation "com.ngc.seaside:jellyfish.api:$version"
    implementation "com.ngc.seaside:jellyfish.utilities:$version"
    implementation "com.ngc.seaside:guice.modules:$version"
    implementation "com.ngc.seaside:jellyfish.service.impl.templateservice:$version"
    implementation "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqubePluginVersion"

    implementation gradleApi()
    implementation localGroovy()
    implementation "com.ngc.seaside:systemdescriptor.service.impl.xtext:$version"
    implementation "com.ngc.seaside:gradle.plugins:$seasidePluginsVersion"
    implementation "com.ngc.blocs:service.api:$blocsVersion"
    implementation "com.google.inject:guice:$guiceVersion"

    commandTemplate project(path: ':jellyfish', configuration: 'commandTemplate')

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.ngc.seaside:gradle.plugins.testutils:$seasidePluginsVersion"
}

// Include the command templates in the JAR.
jar {
    from "${buildDir}/commands-templates/"
}

processResources {
    expand(version: version)
}

task copyCommandTemplate(type: Copy) {
    from configurations.commandTemplate {
        rename { name ->
            def artifacts = configurations.commandTemplate.resolvedConfiguration.resolvedArtifacts
            def artifact = artifacts.find { it.file.name == name }
            "${artifact.moduleVersion.id.group}.${artifact.name}-${artifact.moduleVersion.id.version}-${artifact.classifier}.${artifact.extension}"
        }
    }
    into "${buildDir}/commands-templates/templates/"
}

jar.dependsOn(copyCommandTemplate)

test.systemProperty 'nexusConsolidated', nexusConsolidated
test.systemProperty 'nexusSnapshots', nexusSnapshots
test.systemProperty 'nexusUsername', nexusUsername
test.systemProperty 'nexusPassword', nexusPassword