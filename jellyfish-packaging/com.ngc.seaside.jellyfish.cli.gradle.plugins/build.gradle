/*
 * UNCLASSIFIED
 * Northrop Grumman Proprietary
 * ____________________________
 *
 * Copyright (C) 2018, Northrop Grumman Systems Corporation
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Northrop Grumman Systems Corporation. The intellectual and technical concepts
 * contained herein are proprietary to Northrop Grumman Systems Corporation and
 * may be covered by U.S. and Foreign Patents or patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Northrop Grumman.
 */
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'java-gradle-plugin'

configurations {
   commandTemplate
}

dependencies {
   implementation project(':jellyfish')
   implementation project(':jellyfish.sonarqube.plugin')
   implementation "com.ngc.seaside:jellyfish.api:$version"
   implementation "com.ngc.seaside:jellyfish.utilities:$version"
   implementation "com.ngc.seaside:guice.modules:$version"
   implementation "com.ngc.seaside:jellyfish.service.impl.templateservice:$version"
   implementation "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqubePluginVersion"
   implementation "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:$licensePluginVersion"

   implementation gradleApi()
   implementation localGroovy()
   implementation "com.ngc.seaside:systemdescriptor.service.impl.xtext:$version"
   implementation "com.ngc.seaside:gradle.plugins:$seasidePluginsVersion"
   implementation "com.ngc.blocs:service.api:$blocsVersion"
   implementation "com.google.inject:guice:$guiceVersion"

   // This dependency is needed when applying the sonarqube plugin to a System Descriptor project
   // since it is only provided in the :jellyfish.sonarqube.plugin project
   runtimeOnly "org.sonarsource.sonarqube:sonar-plugin-api:$sonarqubeVersion"

   commandTemplate project(path: ':jellyfish', configuration: 'commandTemplate')

   testImplementation "junit:junit:$junitVersion"
   testImplementation "org.mockito:mockito-core:$mockitoVersion"
   testImplementation "com.ngc.seaside:gradle.plugins.testutils:$seasidePluginsVersion"
}

// Include the command templates in the JAR.
jar {
   from "${buildDir}/commands-templates/"
}

processResources {
   expand(version: version, group: project.group)
}

task copyCommandTemplate(type: Copy) {
   from configurations.commandTemplate {
      rename { name ->
         def artifacts = configurations.commandTemplate.resolvedConfiguration.resolvedArtifacts
         def artifact = artifacts.find { it.file.name == name }
         "${artifact.moduleVersion.id.group}.${artifact.name}-${artifact.moduleVersion.id.version}-${artifact.classifier}.${artifact.extension}"
      }
   }
   into "${buildDir}/commands-templates/templates/"
}

jar.dependsOn(copyCommandTemplate)

test.systemProperty 'nexusConsolidated', nexusConsolidated
test.systemProperty 'nexusSnapshots', nexusSnapshots
test.systemProperty 'nexusUsername', nexusUsername
test.systemProperty 'nexusPassword', nexusPassword
['javax.net.ssl.trustStore', 'http.proxyHost', 'http.proxyPort', 'http.nonProxyHosts',
 'https.proxyHost', 'https.proxyPort', 'https.nonProxyHosts', 'sonar.host.url'].each { key ->
   test.systemProperty(key, System.properties[key])
}
