/*
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
apply plugin: 'biz.aQute.bnd.builder'

// Create an embedded configuration.  Any dependency added to this configuration will be embedded directly into the JAR.
configurations {
   embedded
}

dependencies {
   embedded "org.apache.maven:maven-model:$mavenVersion"
   embedded "org.apache.maven:maven-resolver-provider:$mavenVersion"
   embedded "org.apache.maven:maven-settings-builder:$mavenVersion"
   embedded "org.apache.maven.resolver:maven-resolver-impl:$aetherVersion"
   embedded "org.apache.maven.resolver:maven-resolver-transport-http:$aetherVersion"
   embedded "org.apache.maven.resolver:maven-resolver-transport-file:$aetherVersion"
   // Use a version of Guava that does not have any CVEs.
   embedded "com.google.guava:guava:$guavaVersion"
}

// Configure the JAR task to embedded dependencies and setup the Bundle-ClassPath header as needed.  Also, export
// the packages that have been embedded.

jar {
   classpath = configurations.embedded

   manifest {
      attributes('Export-Package': 'org.apache.maven.*;-split-package:=merge-first,org.codehaus.plexus.*,org.eclipse.aether.impl.*,org.eclipse.aether.transport.*;-split-package:=merge-first',
                 'Import-Package': '!com.google.errorprone.*,!org.eclipse.sisu.*,!sun.misc,!org.codehaus.plexus.logging,*',
                 // Bnd defaults to the version of this bundle, *not* the version of each individual package.  So don't
                 // version the packages at all.
                 '-nodefaultversion': 'true',
                 // Don't generates "uses" notes on the imports.
                 '-nouses': 'true',
                 // Don't care about this warning because we don't want Bnd to copy the classes into the JAR anyway.
                 '-fixupmessages': 'The Bundle-ClassPath does not contain the actual bundle JAR*;is:=ignore,' +
                                   'Export * private references*;is:=ignore')
   }

   from configurations.embedded {
      into 'lib'
   }

   afterEvaluate {
      if (!configurations.embedded.getDependencies().empty) {
         def bundleClasspath = configurations.embedded
               .resolve()
               .collect({ 'lib/' + it.name })
               .join(',')

         manifest { attributes('Bundle-ClassPath': bundleClasspath) }
      }
   }
}


