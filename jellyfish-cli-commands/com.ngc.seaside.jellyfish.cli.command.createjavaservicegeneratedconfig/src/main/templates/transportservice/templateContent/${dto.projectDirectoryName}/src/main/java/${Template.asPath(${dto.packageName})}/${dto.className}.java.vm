#*
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *#
package ${dto.packageName};

#set ($dto.imports.package = $dto.packageName)
#set ($ignore = $dto.imports.add("com.ngc.blocs.service.log.api.ILogService"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.ITransportProvider"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.ITransportService"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.TransportConfiguration"))
#set ($ignore = $dto.imports.add("org.osgi.service.component.annotations.Activate"))
#set ($ignore = $dto.imports.add("org.osgi.service.component.annotations.Component"))
#set ($ignore = $dto.imports.add("org.osgi.service.component.annotations.Deactivate"))
#set ($ignore = $dto.imports.add("org.osgi.service.component.annotations.Reference"))
#foreach ($transportProvider in $dto.transportProviders)
#set ($ignore = $dto.imports.add($transportProvider.topicType))
#set ($ignore = $dto.variables.add($transportProvider, $transportProvider.providerVariableName))
#end
${dto.imports.generateJava()}

@Component(immediate = true)
public class ${dto.className} {

   private ILogService logService;

   private ITransportService transportService;

   private ${dto.adviser.typeName} adviser;

#foreach ($transportProvider in $dto.transportProviders)
   private ITransportProvider<${dto.imports.getType($transportProvider.topicType)}> ${dto.variables.get($transportProvider)};

#end
   @Activate
   public void activate() {
      TransportConfiguration config = new TransportConfiguration();
#foreach ($transportProvider in $dto.transportProviders)
      ${dto.imports.getType($transportProvider.configurationType)}.configure(config, ${dto.variables.get($transportProvider)});
#end
      transportService.registerConfiguration(adviser.adviseTransportConfiguration(config));
      logService.debug(getClass(), "activated");
   }

   @Deactivate
   public void deactivate() {
      logService.debug(getClass(), "deactivated");
   }

   @Reference
   public void setLogService(ILogService ref) {
      this.logService = ref;
   }

   public void removeLogService(ILogService ref) {
      setLogService(null);
   }

   @Reference
   public void setTransportService(ITransportService ref) {
      this.transportService = ref;
   }

   public void removeTransportService(ITransportService ref) {
      setTransportService(null);
   }

   @Reference
   public void setAdviser(${dto.adviser.typeName} ref) {
      this.adviser = ref;
   }

   public void removeAdviser(${dto.adviser.typeName} ref) {
      setAdviser(null);
   }
#foreach ($transportProvider in $dto.transportProviders)
#set ($methodName = ${StringUtils.capitalize($dto.variables.get($transportProvider))})

   @Reference(
         target = "${transportProvider.providerTarget}")
   public void set${methodName}(ITransportProvider<${dto.imports.getType($transportProvider.topicType)}> ref) {
      this.${dto.variables.get($transportProvider)} = ref;
   }

   public void remove${methodName}(ITransportProvider<${dto.imports.getType($transportProvider.topicType)}> ref) {
      set${methodName}(null);
   }
#end
}
