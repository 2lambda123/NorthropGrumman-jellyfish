#*
 * UNCLASSIFIED
 * Northrop Grumman Proprietary
 * ____________________________
 *
 * Copyright (C) 2018, Northrop Grumman Systems Corporation
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Northrop Grumman Systems Corporation. The intellectual and technical concepts
 * contained herein are proprietary to Northrop Grumman Systems Corporation and
 * may be covered by U.S. and Foreign Patents or patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Northrop Grumman.
 *#${header.java}
package ${dto.packageName};

#set ($dto.imports.package = $dto.packageName)
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.ITransportProvider"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.TransportConfiguration"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.impl.topic.httpclient.HttpClientTopic"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.impl.topic.httpclient.HttpClientVerb"))
#foreach ($topic in $dto.topics)
#set ($ignore = $dto.variables.add($topic, $topic.variableName))
#foreach ($transportTopic in $topic.transportTopics)
#set ($ignore = $dto.imports.add($transportTopic.type))
#end
#end
${dto.imports.generateJava()}

public class ${dto.configurationClassName} {

   private ${dto.configurationClassName}() {
   }

   public static void configure(TransportConfiguration config, ITransportProvider<HttpClientTopic> httpClientProvider) {
#foreach ($topic in $dto.topics)
      HttpClientTopic ${dto.variables.get($topic)} = new HttpClientTopic(
            "http://${topic.networkAddress}:${topic.port}${topic.path}",
            HttpClientVerb.${topic.httpMethod},
            HttpClientTopic.DEFAULT_TIMEOUT,
            "${topic.contentType}",
            "${topic.contentType}");

#end

#foreach ($topic in $dto.topics)
#foreach ($transportTopic in $topic.transportTopics)
      config.whenSending()
            .toApplicationTopic(${dto.imports.getType($transportTopic.type)}.${transportTopic.value})
            .useTransportProvider(httpClientProvider)
            .onPhysicalTopic(t -> ${dto.variables.get($topic)});
#end
#end
   }
}
