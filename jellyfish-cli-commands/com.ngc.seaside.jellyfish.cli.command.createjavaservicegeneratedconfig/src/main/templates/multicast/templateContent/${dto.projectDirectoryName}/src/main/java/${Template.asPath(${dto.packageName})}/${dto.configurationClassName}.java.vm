#*
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *#
package ${dto.packageName};

#set ($dto.imports.package = $dto.packageName)
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.ITransportProvider"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.TransportConfiguration"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.TransportConfigurationException"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.impl.topic.multicast.MulticastTopic"))
#set ($ignore = $dto.imports.add("java.net.UnknownHostException"))
#foreach ($topic in $dto.topics)
#set ($ignore = $dto.variables.add($topic, $topic.variableName))
#foreach ($transportTopic in $topic.transportTopics)
#set ($ignore = $dto.imports.add($transportTopic.type))
#end
#end
${dto.imports.generateJava()}

public class ${dto.configurationClassName} {

   private ${dto.configurationClassName}() {
   }

   public static void configure(TransportConfiguration config, ITransportProvider<MulticastTopic> multicastProvider) {
      try {
#foreach ($topic in $dto.topics)
         MulticastTopic ${dto.variables.get($topic)} = new MulticastTopic("${topic.groupAddress}", ${topic.port}, "${topic.bindAddress}");

#end
#foreach ($entry in $dto.sendTopics.entrySet())
#set ($name = $entry.key)
#set ($topics = $entry.value)
#foreach ($topic in $topics)
#foreach ($transportTopic in $topic.transportTopics)
         config.whenSending()
               .toApplicationTopic(${dto.imports.getType($transportTopic.type)}.${transportTopic.value})
               .useTransportProvider(multicastProvider)
               .onPhysicalTopic(t -> ${dto.variables.get($topic)});
#end
#end               
#end

#foreach ($entry in $dto.receiveTopics.entrySet())
#set ($name = $entry.key)
#set ($topics = $entry.value)
#foreach ($topic in $topics)
#foreach ($transportTopic in $topic.transportTopics)
         config.whenReceiving()
               .withTransportProvider(multicastProvider)
               .onPhysicalTopic(${dto.variables.get($topic)})
               .useApplicationTopic(t -> ${dto.imports.getType($transportTopic.type)}.${transportTopic.value});
#end
#end
#end
      } catch (UnknownHostException e) {
         throw new TransportConfigurationException(e);
      }
   }
}
