#*
 * UNCLASSIFIED
 * Northrop Grumman Proprietary
 * ____________________________
 *
 * Copyright (C) 2018, Northrop Grumman Systems Corporation
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Northrop Grumman Systems Corporation. The intellectual and technical concepts
 * contained herein are proprietary to Northrop Grumman Systems Corporation and
 * may be covered by U.S. and Foreign Patents or patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Northrop Grumman.
 *#
${header.java}
package ${dto.packageName};

#set ($dto.imports.package = $dto.packageName)
#set ($ignore = $dto.imports.add("com.google.inject.Inject"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.ITransportProvider"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.ITransportService"))
#set ($ignore = $dto.imports.add("com.ngc.seaside.service.transport.api.TransportConfiguration"))
#foreach ($transportProvider in $dto.transportProviders)
#set ($ignore = $dto.imports.add($transportProvider.topicType))
#set ($ignore = $dto.variables.add($transportProvider, $transportProvider.providerVariableName))
#end
${dto.imports.generateJava()}

@Component(immediate = true)
public class ${dto.className} {

   private ITransportService transportService;

#foreach ($transportProvider in $dto.transportProviders)
   private ITransportProvider<${dto.imports.getType($transportProvider.topicType)}> ${dto.variables.get($transportProvider)};

#end
   @Inject
   public ${dto.className}(ITransportService transportService,
#foreach ($transportProvider in $dto.transportProviders)
         ITransportProvider<${dto.imports.getType($transportProvider.topicType)}> ${dto.variables.get($transportProvider)}#if( $foreach.hasNext ),#{else} {
#end
#end
      this.transportService = transportService;   
#foreach ($transportProvider in $dto.transportProviders)
      this.${dto.variables.get($transportProvider)} = ${dto.variables.get($transportProvider)};
      activate();
#end

   public void activate() {
      TransportConfiguration config = new TransportConfiguration();
#foreach ($transportProvider in $dto.transportProviders)
      ${dto.imports.getType($transportProvider.configurationType)}.configure(config, ${dto.variables.get($transportProvider)});
#end
      transportService.registerConfiguration(config);
      logService.debug(getClass(), "activated");
   }
}
