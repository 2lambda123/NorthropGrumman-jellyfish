#set( $D = '$' )
apply plugin: 'com.ngc.seaside.distribution'

seasideDistribution {
    buildDir = 'build'
    distributionName = "${D}{group}.${D}{project.name}-${D}{version}"
    distributionDir = "build/distribution/${D}{group}.${D}{project.name}-${D}{version}"
    distributionDestDir = 'build/distribution/'
}

configurations {
   thirdParty2 {
      transitive = false
   }
}

dependencies {
#foreach ($dependency in $dto.projectDependencies)
   bundles project(":$dependency")
#end

   bundles "com.ngc.seaside:service.api:${D}starfishCoreVersion"
   bundles "com.ngc.seaside:fault.impl.faultloggingservice:${D}starfishCoreVersion"
   bundles "com.ngc.seaside:monitoring.impl.loggingmonitoringservice:${D}starfishCoreVersion"
   bundles "com.ngc.seaside:service.transport.api:${D}transportServiceVersion"
   bundles "com.ngc.seaside:service.transport.impl.defaulttransportservice:${D}transportServiceVersion"
   bundles "com.ngc.seaside:service.transport.impl.topic.multicast:${D}multicastTransportVersion"
   bundles "com.ngc.seaside:service.transport.impl.provider.multicast:${D}multicastTransportVersion"

   blocs "com.ngc.blocs:api:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:file.impl.common.fileutilities:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:security.impl.common.securityutilities:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:jaxb.impl.common.jaxbutilities:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:xml.resource.impl.common.xmlresource:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.log.impl.common.logservice:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.api:${D}{blocsCoreVersion}"
   //blocs "com.ngc.blocs:service.lifecycle.impl.common.basiclifecyclemgmtservice:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.event.impl.common.eventservice:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.resource.impl.common.resourceservice:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:notification.impl.common.notificationsupport:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:properties.resource.impl.common.propertiesresource:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.framework.impl.common.frameworkmgmtservice:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:component.impl.common.componentutilities:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.notification.impl.common.notificationservice:${D}{blocsCoreVersion}"
   blocs "com.ngc.blocs:service.thread.impl.common.threadservice:${D}{blocsCoreVersion}"

   thirdParty 'com.google.guava:guava:17.0'
   thirdParty2 "com.google.guava:guava:${D}{guavaVersion}" // Note we need 2 versions of guava so we have to do this.
   thirdParty 'commons-io:commons-io:1.4'
   thirdParty 'log4j:log4j-osgi:1.2.17' // This version has the corrected log4j manifest.
   thirdParty 'commons-beanutils:commons-beanutils:1.8.3'
   thirdParty 'commons-lang:commons-lang:2.4'
   thirdParty 'commons-collections:commons-collections:3.2.1'
   thirdParty 'commons-logging:commons-logging-osgi:1.1.1'
   thirdParty "com.google.protobuf:protobuf-java:${D}protobufVersion"

   platform "com.ngc.blocs:service.deployment.impl.common.autodeploymentservice:${D}{blocsCoreVersion}"
   platform "org.eclipse.equinox:equinox-common:3.6.200.v20130402-1505"
   platform "org.eclipse.equinox:equinox-osgi-services:3.4.0.v20140312-2051"
   platform "org.eclipse.equinox:equinox-console:1.1.0.v20140131-1639"
   platform "org.eclipse.equinox:equinox-launcher:1.3.0.v20140415-2008"
   platform "org.apache.felix:gogo.runtime:0.10.0.v201209301036"
   platform "org.eclipse.equinox:equinox-registry:3.5.400.v20140428-1507"
   platform "org.apache.felix:gogo.command:0.10.0.v201209301215"
   platform "org.apache.felix:gogo.shell:0.10.0.v201212101605"
   platform "org.eclipse.equinox:equinox-ds:1.4.1-20120926-201320"
   platform "org.eclipse.equinox:equinox-util:1.0.500-20130404-1337"
   platform "org.eclipse.equinox:equinox-simpleconfigurator:1.1.0.v20131217-1203"
   platform "org.eclipse.equinox:equinox-osgi:3.10.0"
}

copyThirdPartyBundles {
   from configurations.thirdParty2
}
