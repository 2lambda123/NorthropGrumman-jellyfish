/**
 * generated by Xtext 2.10.0
 */
package com.ngc.seaside.systemdescriptor.systemDescriptor.impl;

import com.ngc.seaside.systemdescriptor.systemDescriptor.Array;
import com.ngc.seaside.systemdescriptor.systemDescriptor.EmptyArray;
import com.ngc.seaside.systemdescriptor.systemDescriptor.EmptyObject;
import com.ngc.seaside.systemdescriptor.systemDescriptor.Metadata;
import com.ngc.seaside.systemdescriptor.systemDescriptor.Model;
import com.ngc.seaside.systemdescriptor.systemDescriptor.ObjectValue;
import com.ngc.seaside.systemdescriptor.systemDescriptor.SystemDescriptorFactory;
import com.ngc.seaside.systemdescriptor.systemDescriptor.SystemDescriptorPackage;
import com.ngc.seaside.systemdescriptor.systemDescriptor.TerminalObject;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SystemDescriptorFactoryImpl extends EFactoryImpl implements SystemDescriptorFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SystemDescriptorFactory init()
  {
    try
    {
      SystemDescriptorFactory theSystemDescriptorFactory = (SystemDescriptorFactory)EPackage.Registry.INSTANCE.getEFactory(SystemDescriptorPackage.eNS_URI);
      if (theSystemDescriptorFactory != null)
      {
        return theSystemDescriptorFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SystemDescriptorFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemDescriptorFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SystemDescriptorPackage.MODEL: return createModel();
      case SystemDescriptorPackage.METADATA: return createMetadata();
      case SystemDescriptorPackage.OBJECT: return createObject();
      case SystemDescriptorPackage.ARRAY: return createArray();
      case SystemDescriptorPackage.EMPTY_OBJECT: return createEmptyObject();
      case SystemDescriptorPackage.EMPTY_ARRAY: return createEmptyArray();
      case SystemDescriptorPackage.OBJECT_VALUE: return createObjectValue();
      case SystemDescriptorPackage.TERMINAL_OBJECT: return createTerminalObject();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Metadata createMetadata()
  {
    MetadataImpl metadata = new MetadataImpl();
    return metadata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.ngc.seaside.systemdescriptor.systemDescriptor.Object createObject()
  {
    ObjectImpl object = new ObjectImpl();
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Array createArray()
  {
    ArrayImpl array = new ArrayImpl();
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EmptyObject createEmptyObject()
  {
    EmptyObjectImpl emptyObject = new EmptyObjectImpl();
    return emptyObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EmptyArray createEmptyArray()
  {
    EmptyArrayImpl emptyArray = new EmptyArrayImpl();
    return emptyArray;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectValue createObjectValue()
  {
    ObjectValueImpl objectValue = new ObjectValueImpl();
    return objectValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TerminalObject createTerminalObject()
  {
    TerminalObjectImpl terminalObject = new TerminalObjectImpl();
    return terminalObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemDescriptorPackage getSystemDescriptorPackage()
  {
    return (SystemDescriptorPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SystemDescriptorPackage getPackage()
  {
    return SystemDescriptorPackage.eINSTANCE;
  }

} //SystemDescriptorFactoryImpl
