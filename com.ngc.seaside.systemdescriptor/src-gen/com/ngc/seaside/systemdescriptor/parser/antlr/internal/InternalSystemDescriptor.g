/*
 * generated by Xtext 2.10.0
 */
grammar InternalSystemDescriptor;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.ngc.seaside.systemdescriptor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.ngc.seaside.systemdescriptor.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ngc.seaside.systemdescriptor.services.SystemDescriptorGrammarAccess;

}

@parser::members {

 	private SystemDescriptorGrammarAccess grammarAccess;

    public InternalSystemDescriptorParser(TokenStream input, SystemDescriptorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Descriptor";
   	}

   	@Override
   	protected SystemDescriptorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDescriptor
entryRuleDescriptor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptorRule()); }
	iv_ruleDescriptor=ruleDescriptor
	{ $current=$iv_ruleDescriptor.current; }
	EOF;

// Rule Descriptor
ruleDescriptor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDescriptorAccess().getPackagePackageParserRuleCall_0_0());
				}
				lv_package_0_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDescriptorRule());
					}
					set(
						$current,
						"package",
						lv_package_0_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDescriptorAccess().getElementsElementParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDescriptorRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleUnqualifiedName
entryRuleUnqualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnqualifiedNameRule()); }
	iv_ruleUnqualifiedName=ruleUnqualifiedName
	{ $current=$iv_ruleUnqualifiedName.current.getText(); }
	EOF;

// Rule UnqualifiedName
ruleUnqualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getUnqualifiedNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleData
entryRuleData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	iv_ruleData=ruleData
	{ $current=$iv_ruleData.current; }
	EOF;

// Rule Data
ruleData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='data'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataAccess().getDataKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccess().getNameUnqualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnqualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.UnqualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getNameUnqualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnqualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.UnqualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getDataParserRuleCall_0());
		}
		this_Data_0=ruleData
		{
			$current = $this_Data_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getModelParserRuleCall_1());
		}
		this_Model_1=ruleModel
		{
			$current = $this_Model_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObject
entryRuleObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectRule()); }
	iv_ruleObject=ruleObject
	{ $current=$iv_ruleObject.current; }
	EOF;

// Rule Object
ruleObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectAccess().getFirstObjectTerminalObjectParserRuleCall_1_0());
				}
				lv_firstObject_1_0=ruleTerminalObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectRule());
					}
					set(
						$current,
						"firstObject",
						lv_firstObject_1_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.TerminalObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getObjectAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectAccess().getObjectsTerminalObjectParserRuleCall_2_1_0());
					}
					lv_objects_3_0=ruleTerminalObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectRule());
						}
						add(
							$current,
							"objects",
							lv_objects_3_0,
							"com.ngc.seaside.systemdescriptor.SystemDescriptor.TerminalObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	iv_ruleArray=ruleArray
	{ $current=$iv_ruleArray.current; }
	EOF;

// Rule Array
ruleArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayAccess().getFirstItemObjectValueParserRuleCall_1_0());
				}
				lv_firstItem_1_0=ruleObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayRule());
					}
					set(
						$current,
						"firstItem",
						lv_firstItem_1_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.ObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccess().getItemsObjectValueParserRuleCall_2_1_0());
					}
					lv_items_3_0=ruleObjectValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayRule());
						}
						add(
							$current,
							"items",
							lv_items_3_0,
							"com.ngc.seaside.systemdescriptor.SystemDescriptor.ObjectValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEmptyObject
entryRuleEmptyObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyObjectRule()); }
	iv_ruleEmptyObject=ruleEmptyObject
	{ $current=$iv_ruleEmptyObject.current; }
	EOF;

// Rule EmptyObject
ruleEmptyObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_isEmpty_0_0='{}'
			{
				newLeafNode(lv_isEmpty_0_0, grammarAccess.getEmptyObjectAccess().getIsEmptyLeftCurlyBracketRightCurlyBracketKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEmptyObjectRule());
				}
				setWithLastConsumed($current, "isEmpty", true, "{}");
			}
		)
	)
;

// Entry rule entryRuleEmptyArray
entryRuleEmptyArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyArrayRule()); }
	iv_ruleEmptyArray=ruleEmptyArray
	{ $current=$iv_ruleEmptyArray.current; }
	EOF;

// Rule EmptyArray
ruleEmptyArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_isEmpty_0_0='[]'
			{
				newLeafNode(lv_isEmpty_0_0, grammarAccess.getEmptyArrayAccess().getIsEmptyLeftSquareBracketRightSquareBracketKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEmptyArrayRule());
				}
				setWithLastConsumed($current, "isEmpty", true, "[]");
			}
		)
	)
;

// Entry rule entryRuleObjectValue
entryRuleObjectValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectValueRule()); }
	iv_ruleObjectValue=ruleObjectValue
	{ $current=$iv_ruleObjectValue.current; }
	EOF;

// Rule ObjectValue
ruleObjectValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_STRING
				{
					newLeafNode(lv_value_0_0, grammarAccess.getObjectValueAccess().getValueSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getObjectValueAccess().getObjectParserRuleCall_1());
		}
		this_Object_1=ruleObject
		{
			$current = $this_Object_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectValueAccess().getArrayParserRuleCall_2());
		}
		this_Array_2=ruleArray
		{
			$current = $this_Array_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectValueAccess().getEmptyObjectParserRuleCall_3());
		}
		this_EmptyObject_3=ruleEmptyObject
		{
			$current = $this_EmptyObject_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectValueAccess().getEmptyArrayParserRuleCall_4());
		}
		this_EmptyArray_4=ruleEmptyArray
		{
			$current = $this_EmptyArray_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTerminalObject
entryRuleTerminalObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminalObjectRule()); }
	iv_ruleTerminalObject=ruleTerminalObject
	{ $current=$iv_ruleTerminalObject.current; }
	EOF;

// Rule TerminalObject
ruleTerminalObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_element_0_0=RULE_STRING
				{
					newLeafNode(lv_element_0_0, grammarAccess.getTerminalObjectAccess().getElementSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTerminalObjectRule());
					}
					setWithLastConsumed(
						$current,
						"element",
						lv_element_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTerminalObjectAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminalObjectAccess().getContentObjectValueParserRuleCall_2_0());
				}
				lv_content_2_0=ruleObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminalObjectRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"com.ngc.seaside.systemdescriptor.SystemDescriptor.ObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
