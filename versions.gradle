allprojects {
   group = 'com.ngc.seaside'
   version = '2.23.0'

   ext {
      blocsPluginVersion = '0.5'
      seasidePluginsVersion = '2.23.0'
      sonarqubePluginVersion = '2.5'
      xtextPluginVersion = '1.0.15'

      aetherVersion = '1.1.0'
      blocsVersion = '3.0.0'
      blocsDomainVersion = '2.3.1'
      bootstrapCommandsVersion = '1.2'
      commonsIOVersion = '2.5'
      commonsLangVersion = '2.6'
      commonsLang3Version = '3.5'
      gherkinVersion = '5.0.0'
      emfVersion = '2.12.0'
      flexmarkVersion = '0.34.2'
      glassfishJsonVersion = '1.1'
      guavaVersion = '26.0-jre'
      guiceVersion = '4.1.0'
      jaxbVersion = '2.3.0'
      junitVersion = '4.12'
      licensePluginVersion = '0.14.0'
      log4jVersion = '2.14.0'
      mavenVersion = '3.5.2'
      mockitoVersion = '2.19.0'
      osgiVersion = '6.0.0'
      protobufVersion = '3.2.0'
      velocityVersion = '2.0'
      xtextVersion = '2.14.0'
      sonarqubeVersion = '6.7'

      m2directory = project.file("${project.rootProject.projectDir}/../build/dependencies-m2")
      dependenciesReportFile = project.file("${project.rootProject.projectDir}/../build/dependencies.tsv")
      m2DeploymentScriptFile = project.file("${project.rootProject.projectDir}/../build/deploy.sh")

      licenseFile = project.file("${project.rootProject.projectDir}/../LICENSE")
   }

   plugins.withId('java') {
      sourceCompatibility = '1.8'
      targetCompatibility = '1.8'

      // Include the license in every JAR.
      tasks.withType(Jar) {
         from licenseFile
      }
   }

   plugins.withId('com.ngc.seaside.command') {
      // Include the license in every ZIP
      tasks.matching({ it.name.startsWith('createTemplate') }).all {
         from licenseFile
      }
   }

   plugins.withId('com.github.hierynomus.license') {
      license {
         // Use this for the license file.
         header = file(licenseFile)
         // Automatically update the year in the license.
         ext.year = Calendar.getInstance().get(Calendar.YEAR)
         // Handle META-INF/services.
         mapping('Module', 'SCRIPT_STYLE')
         // Handle SD files.
         mapping('sd', 'JAVADOC_STYLE')
         // Handle feature files.
         mapping('feature', 'SCRIPT_STYLE')
         // Handle Velocity templates.
         mapping('vm', 'SHARPSTAR_STYLE')
         // Exclude binary files.
         exclude '**/*.zip'
         exclude '**/*.jar'
         exclude '**/*.expected'
         exclude '**/*.csv'
         exclude '**/*.md'
         exclude "**/*.txt"
      }
   }
   
   plugins.withId('com.ngc.seaside.repository') {
      ext {
           nexusConsolidated = 'https://repo1.maven.org/maven2/'
           nexusUsername = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
           nexusPassword = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
		   nexusSnapshots = 'https://maven.pkg.github.com/northropgrumman/jellyfish'
		   nexusReleases = 'https://maven.pkg.github.com/northropgrumman/jellyfish'
      }
   }
}
