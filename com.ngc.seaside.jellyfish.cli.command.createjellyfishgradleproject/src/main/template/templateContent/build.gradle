/**
 * ${projectName}
 */

import com.ngc.seaside.jellyfish.cli.gradle.plugins.JellyFishCliCommandTask
 
buildscript {
    repositories {
        mavenLocal()

        maven {
            url nexusConsolidated
        }
    }

   dependencies {
      classpath 'com.ngc.blocs:gradle.plugin:0.2'
      classpath 'com.ngc.seaside:gradle.plugins:1.5'
      classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
      classpath 'com.ngc.seaside:jellyfish.cli.gradle.plugins:1.0'
   }
}

subprojects {

   // Do not apply the parent plugin to the distribution project.
   if(!name.endsWith('.distribution')
       && !name.endsWith('.docker')) {
      apply plugin: 'com.ngc.seaside.parent'
    }

    group = '${groupId}'
    version = '${version}'

    ext {
        starfishCoreVersion = '1.0'
        transportServiceVersion = '1.1.1'
        multicastTransportVersion = '1.0.2-SNAPSHOT'
        seasideBootstrapVersion = '1.2'

        blocsCoreVersion = '2.1'
        blocsDomainVersion = '2.1'

        guiceVersion = '4.1.0'
        osgiVersion =  '6.0.0'
        guavaVersion = '22.0'
        protobufVersion = '3.2.0'

        junitVersion = '4.12'
        mockitoVersion = '2.7.14'
    }
}

// Sample command - replace this with a transient project generator task
task sdHelp(type: JellyFishCliCommandTask) {
    command = 'help'           
    inputDir = './src/main/sd'   
    
    // This can be configured here. Command line use "--args <args>" will discard these.
    args = 'verbose=true'
}
